spring:
  profiles:
    group:
      dev: common, develop
      prod: common, production
---
spring:
  config:
    activate:
      on-profile: develop
  # ??? ?? ??
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/withus?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
    username: root
    password: root
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
      jdbc-url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driver-class-name}
      data-source-properties:
        rewriteBatchedStatements: true
#  second-datasource:
#    mongodb:
#      authentication-database: admin
#      username: root
#      password: root
#      database: boonmoja
#      port: 27017
#      host: localhost
#    servlet:
#      multipart:
#        max-file-size: 5MB
#        max-request-size: 5MB
#        enabled: true
app:
  oauth2:
    authorizedRedirectUris:
      - https://localhost:3000/oauth/redirect

cors:
  allowed-origins: 'https://localhost:3000'
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: '*'
  max-age: 3600
---
server:
  ssl :
    key-store: classpath:keystore.p12
    key-store-password: ssafywithus
    key-store-type: PKCS12

spring:
  config:
    activate:
      on-profile: common
  # JPA ??
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update    # ???? ????? ???? ??.
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true

  # Security OAuth
  security:
    oauth2.client:
      registration:
        google:
          clientId: '652942239715-jr49i1bgcvj61i60tlqvnviuk3r9jm7b.apps.googleusercontent.com'
          clientSecret: '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'
          scope:
            - email
            - profile
        kakao:
          clientId: '2164f1b6315cc83807a68df15be105de'
          clientSecret: 'W02QpxgiEyMcITxdL0kJE1SRwObIGPdZ'
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          scope:
            - profile_nickname
            - profile_image
            - account_email
          clientName: Kakao
        naver:
          clientId: '4027eCw7q7GFWvcQs3Cp'
          clientSecret: 'QyAmvEwIm8'
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          scope:
            - nickname
            - email
            - profile_image
          clientName: Naver
      # Provider ??
      provider:
        kakao:
          authorizationUri: https://kauth.kakao.com/oauth/authorize
          tokenUri: https://kauth.kakao.com/oauth/token
          userInfoUri: https://kapi.kakao.com/v2/user/me
          userNameAttribute: id
        naver:
          authorizationUri: https://nid.naver.com/oauth2.0/authorize
          tokenUri: https://nid.naver.com/oauth2.0/token
          userInfoUri: https://openapi.naver.com/v1/nid/me
          userNameAttribute: response
# cors ??

# jwt secret key ??
jwt.secret: '8sknjlO3NPTBqo319DHLNqsQAfRJEdKsETOdswithus'

# ?? ?? secret Key ? RedirectUri ??
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpiry: 180000000
    refreshTokenExpiry: 604800000

springdoc:
  version: '@project.version@'
  api-docs:
    path: /v3/api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    operations-sorter: alpha
    tags-sorter: alpha
    path: /swagger-ui.html
    disable-swagger-default-url: true
    display-query-params-without-oauth2: true
    persistAuthorization: true
  paths-to-match:
    - /**
    - /test/**


---
spring:
  config:
    activate:
      on-profile: production
  # ??? ?? ??
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://k6c103.p.ssafy.io:3306/withus?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
    username: root
    password: root
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
      jdbc-url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driver-class-name}
      data-source-properties:
        rewriteBatchedStatements: true

app:
  oauth2:
    authorizedRedirectUris:
      - https://k6c103.p.ssafy.io/oauth/redirect

cors:
  allowed-origins: 'https://k6c103.p.ssafy.io'
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: '*'
  max-age: 3600